- name: Check Terraform user
  ansible.builtin.shell: pveum user list | grep -qw 'terraform@pve'
  register: terraform_user
  failed_when: false
  changed_when: false
  run_once: true

- name: Create Terraform user
  ansible.builtin.shell: pveum user add terraform@pve
  when: terraform_user.rc != 0
  run_once: true

- name: Check Terraform role
  ansible.builtin.shell: pveum role list | grep -qw 'Terraform'
  register: terraform_role
  failed_when: false
  changed_when: false
  run_once: true

- name: Create Terraform role
  ansible.builtin.shell: |
    pveum role add Terraform \
      -privs "Datastore.Allocate,Datastore.AllocateSpace,Datastore.AllocateTemplate,Datastore.Audit,Pool.Allocate,Sys.Audit,Sys.Console,Sys.Modify,VM.Allocate,VM.Audit,VM.Clone,VM.Config.CDROM,VM.Config.Cloudinit,VM.Config.CPU,VM.Config.Disk,VM.Config.HWType,VM.Config.Memory,VM.Config.Network,VM.Config.Options,VM.Migrate,VM.PowerMgmt,User.Modify"
  when: terraform_role.rc != 0
  run_once: true

- name: Verify Terraform ACL assignment
  ansible.builtin.shell: pveum acl list / | grep -E "terraform@pve.*Terraform"
  register: terraform_acl
  failed_when: false
  changed_when: false
  run_once: true

- name: Assign Terraform role
  ansible.builtin.shell: pveum aclmod / -user terraform@pve -role Terraform
  when: terraform_acl.rc != 0
  run_once: true

- name: Check Terraform API token
  ansible.builtin.shell: pveum user token list terraform@pve | grep -qw provider
  register: terraform_token
  failed_when: false
  changed_when: false
  run_once: true

- name: Create Terraform API token
  ansible.builtin.shell: pveum user token add terraform@pve provider --privsep=0 --output-format=json
  when: terraform_token.rc != 0
  register: terraform_raw_token
  run_once: true

- name: Record Terraform token
  ansible.builtin.set_fact:
    terraform_token_value: "{{ (terraform_raw_token.stdout | from_json).value }}"
  when: terraform_raw_token is defined and terraform_raw_token.changed
  run_once: true

- name: Display Terraform token
  ansible.builtin.debug:
    msg:
      - "Token ID: terraform@pve!provider"
      - "Token Secret: {{ terraform_token_value }}"
  when: terraform_raw_token is defined and terraform_raw_token.changed
  run_once: true
